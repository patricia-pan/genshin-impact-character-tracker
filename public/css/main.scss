@font-face { 
    font-family: 'Genshin-Font'; 
    src: url('../genshin.ttf') format("truetype"); 
}

@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,600;1,300;1,600&display=swap');

$background-color: #124454;
$header-color: white;
$header-font: 'Genshin-Font', sans-serif; 
$div-translucent-color: #ffffffaa;
$dark-teal: #0f4150;

// How to add comments in .scss (first section): https://sass-lang.com/documentation/syntax/comments

body.layout {
    background-attachment: fixed; // So background stays fixed when we scroll.
    background-color: #124454;
    background-image: linear-gradient(rgba(54, 112, 130, 0.9), rgba(0,0,0,.95)),
        url("../img/genshin_28_4K.jpg"); // Source: https://www.gensh.in/gallery/wallpaper#lg=1&slide=0
    background-repeat: no-repeat;
    background-size: cover;
    margin-bottom: 50px;
}

div.body {    
    width: 85vw; // So that gradient covers the entire page.
    display: flex; // Center all of our child elements.
    flex-direction: column;
    align-items: center; // Centers horizontally because column.
    // justify-content: center; // Centers stuff vertically because of column.
    background-color: #FFFFFF1A;
    border-radius: 5px;
    font-family: 'Nunito', sans-serif;
    margin: 0 auto; // Centers child elements horizontally.
    margin-bottom: 0;
    padding-top: 15px;
    padding-bottom: 80px;
}


div.translucent {   
    background-color: $div-translucent-color;
    border-radius: 5px;
    padding: 10px; 
    text-align: center;
}

div.center {
    text-align: center;
}

h1, h2, h3, h4, h5, h6 {
    font-family: $header-font;
    color: $header-color;
}

h1 {
    font-size: 38px;
}

// Add transparent hover effect for image links.
// https://www.w3schools.com/css/css_image_transparency.asp
a img {
    opacity: 1.0;
}

a img:hover {
    opacity: 0.5;
}

// ul {
//     list-style: none;
// }

///////// For myCharacters.ejs. ///////////////////////////
ul.character-container {
    list-style: none;
    
    display: flex; 
    flex-direction: row;
    flex-wrap: wrap;
}
.flex-row {
    display: flex;
    flex-direction: row;
}
.flex-col {
    display: flex;
    flex-direction: column;
}
.bottom { // For putting 'Delete' button at bottom on dashboardView.ejs
    position: relative;
    top: 10px;
}

// For login.ejs.
.login {
    width: 75px;
    display: inline-block;
}

#login-button {
    margin-top: 5px;
}

////////////////////////////////////////////////////////////////////////
/////////// For dashboardView.ejs ////////////////////////////////////
.dashboard { // To be able to self-center each goal wrapper.
    display: flex;
    flex-direction: column;
    align-items: center;
}
.goal-wrapper {
    border: 2px solid $dark-teal !important;
    //text-align: center;
    display: flex;
    flex-direction: column;
    margin: .5em;
    width: 40vw; 
    align-self: center;
}
.goal-header {
    align-self: center;
    border-bottom: 2px solid $dark-teal !important;
    text-align: center;
    min-width: 225px;
    width: 35vw;
}
.goal-content {
    align-self: center;
    list-style: none;
    width: 35vw; 
    min-width: 225px;   
    padding-left: 0;
    padding-right: 0;
    // margin-left: -5em;
    // Have width vw of goal header and content be the same, then add
    // negative left and negative right margins to goal content.
}
.li-align-left {
    text-align: left;
}
// So that form takes up width relative to body in dashboardView.ejs.
div.body-width {
    width: 80vw;
}
///// Add New Note to Character ///////////////
div.add-note-wrapper {
    margin-top: 15px;
    min-width: 225px;   
}

div.top-line-break {
    margin-top: 50px;
    border-top: 2px solid $dark-teal;
    padding-top: 50px;
}
span.transparent { // So that 'Goal' label lines up with 'Character label' by making 4 underscores invisible.
    color: rgba(255, 255, 255, 0);
}
.add-notes {
    width: 59%;
}